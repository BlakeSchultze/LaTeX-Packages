%*******************************************************************************************************************************%
%****************************************************** `pkgopts.sty' **********************************************************%
%*******************************************************************************************************************************%
% Expands upon the 'kvoptions' package to add new package option commands and corresponding processing, dissemination, and configuration procedures:
%       (1) \DeclareChoiceOption
%       (2) \DeclareChoiceArrayOption
%       (3) \DeclareBoolOptionPair
%
% (1) is analagous to a key defined using the 'define@choicekey' command of the 'keyval' package, thereby providing key/value package option commands equivalent to each of the primary key types defined by the 'keyval' package.  A csv list of acceptable "choices" are provided for the key and user supplied values are validated on execution, with a compilation error thrown for invalid choices.  (2) has the same functionality as (1) but valid options are passed as a csv list whose entries each have multiple values, each value separated by a '/' (e.g. X/Y/Z) to match the syntax supported by PGF's \foreach as this is used in validation.  Users simply specify which "column" number containing the valid choices for a particular key and the subsequent processing is equivalent to (1).  This is particularly useful for font related package options since it is helpful to have csv font lists containing the font name, supported encodings, preferred encoding, font family code, and potentially shape/style, etc..  With this information encapsulated, the settings associated with the various font properties can be set automatically based on the selected font name or family and one can easily ensure there are no conflicts between any font related "Choice" or "ChoiceArray" package options, such as selecting a font encoding that does not support the font selected.
%       (3) is an extension of the \DeclareBoolOption package option command which, for a Boolean option 'X', automatically creates complimentaty Boolean options 'noX' and 'Xoff' making it possible to specify 'X'=false using a single keyword having a more immediately obvious meaning.
%       The command used to process the original package option commands is then encapsulated with those used to validate and process the custom package option commands provided here such that the processing of all package options is done with a single command \ProcessPackageOptions.
%*******************************************************************************************************************************%
%********************************** Define provided package name and LaTeX/package dependencies ********************************%
%*******************************************************************************************************************************%
\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{pkgopts}                       %
%-------------------------------------------------------------------------------------------------------------------------------%
%*******************************************************************************************************************************%
%************************************* Package options and corresponding Boolean variables *************************************%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
\DeclareOption*{\PackageWarning{pkgopts}{Unknown \CurrentOption}}
%*******************************************************************************************************************************%
%************************************************ Processing of package options ************************************************%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
\ProcessOptions\relax
%-------------------------------------------------------------------------------------------------------------------------------%
\makeatletter                                           % Change @ -> catcode'@=11 (letter) for use in macro names/definition
%-------------------------------------------------------------------------------------------------------------------------------%
%*******************************************************************************************************************************%
%******************************************************** Package Body *********************************************************%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 'my-latex' package "Choice" option supported values  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\choicetestoptions{choiceone,choicetwo,choicethree}
\gdef\@supported@page@numbering{arabic,roman,Roman,alph,Alph,fnsymbol}
\gdef\@supported@page@labeling{thepage,oftotal,ofsector,rawpage}
\gdef\@supported@chaphead@styles{Sonny,Lenny,Glenn,Conny,Rejne,Bjarne,Bjornstrup,PetersLenny}
\gdef\@known@documentclasses{report,article,journal,proceedings}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@font@families%
{%
        augie,bch,ccr,cmbr,cmr,cmss,cmtl,cmtl,cmtl,cmtl,cmtl,cmtt,cmtt,cmtt,cmvtt,dayrom,dayroms,futj,futs,futx,fve,fvs,hlce,%
        hlcf,hlcn,hlct,hlcw,hlh,hls,hlst,hlx,lmdh,lmr,lmss,lmssq,lmtt,lmtt,lmvtt,pag,pbk,pcr,phv,pnc,pnc,ppl,pplj,pplx,ppt,ptm,%
        ptmj,ptmx,ptr,put,put,pxr,pxss,pxtt,pzc,qag,qbk,qcr,qcs,qhv,qhvc,qpl,qtm,qzc,txr,txss,txtt,uag,ugq,ul8,ul9,uop%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@font@encodings{OT1,OT3,OT4,OT6,T1,T2A,T2B,T2C,TS1,TS3,X2,OML,OMS,OMX,LY1,LV1,LG3,PD1,PU,U}
\gdef\@supported@font@encodings{OT1,T1,TS1,OML,OMS,OMX,PD1,PU,U}
\gdef\@unsupported@font@encodings{OT2,OT3,OT4,OT6,T2A,T2B,T2C,TS3,X2,LY1,LV1,LG3}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@font@series{l,m,b,bx}
\gdef\@known@font@shapes{n,it,sl,sc}
\gdef\@known@size@clo@defs{10,11,12}
%-------------------------------------------------------------------------------------------------------------------------------%
\def\@unnamed@font@families%
{%
        augie,bch,ccr,cmvtt,dayrom,dayroms,futj,futs,futx,hlce,hlcf,hlcn,hlct,hlcw,hlh,hls,hlst,hlx,lmdh,lmr,lmss,lmssq,lmvtt,
        pag,pbk,pcr,phv,pnc,ppl,pplj,pplx,ptm,ptmj,ptmx,put,pxr,pxss,pxtt,pzc,qag,qbk,qcr,qcs,qhv,qhvc,qpl,qtm,qzc,txr,txss,txtt,
        ugq,ul8,ul9
}
%-------------------------------------------------------------------------------------------------------------------------------%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@malfunctioning@font@families{uag}
%-------------------------------------------------------------------------------------------------------------------------------%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 'my-latex' package "ChoiceArray" option supported value pairs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@fontname@fontcode@pairs%
{
        {Adobe Courier}/pcr,
        {Adobe Helvetica}/phv,
        {Adobe New Century Schoolbok}/pnc,
        {Adobe Palatino}/ppt,
        {Adobe Times Roman}/ptr,
        {Avant Garde}/pag,
        {Bera Sans}/fvs,
        {Bera Serif}/fve,
        {Bookman}/pbk,
        {Charter}/bch,
        {CM Bright}/cmbr,
        {CM Roman}/cmr,
        {CM Sans}/cmss,
        {CM Sans Serif}/cmss,
        {CM Typewriter}/cmtt,
        {CM Typewriter Light}/cmtl,
        {Computer Modern Bright}/cmbr,
        {Computer Modern Roman}/cmr,
        {Computer Modern Sans}/cmss,
        {Computer Modern Sans Serif}/cmss,
        {Computer Modern Typewriter}/cmtt,
        {Computer Modern Typewriter Light}/cmtl,
        {Courier}/pcr,
        {Fourier}/put,
        {Helvetica}/phv,
        {ITC Bookman}/pbk,
        {ITC Avant Garde Gothic}/pag,
        {Latin Modern Dunhill}/lmdh,
        {Latin Modern Roman}/lmr,
        {Latin Modern Sans Serif}/lmss,
        {Latin Modern Sans Typewriter}/lmtt,
        {LM Dunhill}/lmdh,
        {LM Roman}/lmr,
        {LM Sans Serif}/lmss,
        {LM Sans Typewriter}/lmtt,
        {New Century Schoolbook}/pnc,
        {Palatino}/ppl,
        {TEX Gyre Termes}/qtm,
        {TEX Gyre Pagella}/qpl,
        {TEX Gyre Bonum}/qbk,
        {TEX Gyre Schola}/qcs,
        {TEX Gyre Adventor}/qag,
        {TEX Gyre Heros}/qhv,
        {TEX Gyre Cursor}/qcr,
        {Times}/ptm,
        {URW Classico}/uop,
        {Utopia}/put,
        {Zapf Chancelery}/pzc%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@ss@fontname@fontcode@pairs%
{
        {CM Sans}/cmss,
        {CM Sans Serif}/cmss,
        {Computer Modern Sans}/cmss,
        {Computer Modern Sans Serif}/cmss,
        {Latin Modern Sans Serif}/lmss,
        {LM Sans Serif}/lmss
}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@tt@fontname@fontcode@pairs%
{
        {CM Typewriter}/cmtt,
        {CM Typewriter Light}/cmtl,
        {Computer Modern Typewriter}/cmtt,
        {Computer Modern Typewriter Light}/cmtl,
        {Latin Modern Sans Typewriter}/lmtt,
        {LM Sans Typewriter}/lmtt
}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@symbols@fontname@fontcode@pairs%
{
        {CM Typewriter}/cmsy,
        {CM Typewriter Light}/lmsy,
        {Computer Modern Typewriter}/cmtt,
        {Computer Modern Typewriter Light}/cmtl,
        {Latin Modern Sans Typewriter}/lmtt,
        {LM Sans Typewriter}/lmtt
}
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\@known@largesymbols@fontname@fontcode@pairs%
{
        {CM Typewriter}/cmex,
        {CM Typewriter Light}/lmex,
        {Computer Modern Typewriter}/stixex,
        {Computer Modern Typewriter Light}/cmtl,
        {Latin Modern Sans Typewriter}/lmtt,
        {LM Sans Typewriter}/lmtt
}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~ 'my-latex' package "Choice/ChoiceArray" option invalid input detection & console output ~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareChoiceOptionMessage[2][\KVO@prefix]%
{%\DeclareChoiceOptionMessage[<prefix>]{<key>}
        \gdef\msgtext{\string\DeclareChoiceOption\space Error%
        \MessageBreak Invalid choice '#1#2\space=\space\@nameuse{#1#2}'}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareChoiceOptionHelp[2][\KVO@prefix]%
{%\DeclareChoiceOptionHelp[<prefix>]{<key>}
        \gdef\helptext{\string\DeclareChoiceOption\space Help:%
        \IndentedMessageBreak Valid '#1#2' Options:%
        \MessageBreak\IndentedMessageBreak #2\space=\space{\@nameuse{@#1valid@#2@choice@options}}}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareChoiceOptionError[2][\KVO@prefix]%
{%\DeclareChoiceOptionError[<prefix>]{<key>}
        \DeclareChoiceOptionMessage[#1]{#2}%
        \DeclareChoiceOptionHelp[#1]{#2}%
        \@PackageError\pkgname\msgtext\helptext%
}%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareChoiceArrayOptionMessage[2][\KVO@prefix]%
{%\DeclareChoiceArrayOptionMessage[<prefix>]{<key>}
        \gdef\msgtext{\string\DeclareChoiceArrayOption\space Error%
        \MessageBreak Invalid choice '#1#2\space=\space\@nameuse{#1#2}'}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareChoiceArrayOptionHelp[2][\KVO@prefix]%
{%\DeclareChoiceArrayOptionHelp[<prefix>]{<key>}
        \gdef\helptext{\string\DeclareChoiceArrayOption\space Help:%
        \IndentedMessageBreak Valid '#1#2' Options:%
        \MessageBreak\IndentedMessageBreak #2\space=\space{\@nameuse{#1valid@#2@choicearray@options}}}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareChoiceArrayOptionError[2][\KVO@prefix]%
{%\DeclareChoiceArrayOptionError[<prefix>]{<key>}
        \DeclareChoiceArrayOptionMessage[#1]{#2}%
        \DeclareChoiceArrayOptionHelp[#1]{#2}%
        \@PackageError\pkgname\msgtext\helptext%
}%
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Define 'my-latex' package Bool aliases option command ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\DeclareBoolOptionPair[2][false]%
{%\DeclareBoolOptionPair[<init>]{<key>} --> \ifmylatex@#2, \ifmylatex@no#2, \ifmylatex@#2off
       % \ifstrempty{#1}
%                {\def\@current@prefix{\KVO@prefix}}%
%                {\def\@current@prefix{#1}}%
        \DeclareBoolOption[#1]{#2}
        \DeclareComplementaryOption{#2off}{#2}
        \DeclareComplementaryOption{no#2}{#2}
        \@add@to@csvlist{#2}{\@defined@Bool@Option@Pairs}
}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~ Define 'my-latex' package "Choice" option declaration/processing commands ~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\def\DeclareChoiceOption{\@ifnextchar(\@DeclareChoiceOption\@DeclareChoiceOption(\KVO@prefix)}%
%-------------------------------------------------------------------------------------------------------------------------------%
\def\@DeclareChoiceOption(#1)#2[#3]#4
{%\DeclareChoiceOption<*>(<prefix>){<key>}[<default>]{<valid key values>}
        \ifstrempty{#1}
                {\def\@current@prefix{\KVO@prefix}}%
                {\def\@current@prefix{#1}}%
        \ifstrempty{#3}
                {\DeclareStringOption{#2}}%
                {\DeclareStringOption[#3]{#2}[#3]}%
        \@add@to@csvlist{#2}{\@defined@Choice@Options}
        \csname@y\newif{if\@current@prefix#2}
        %\xp@newif{if\@current@prefix#2}%->\if<prefix><key>
        %\xp@gdef{@\@current@prefix valid@#2@choice@options}{#4}%
        %\xp@xdef{@#2@prefix}{\@current@prefix}%
        \csname@nyN\gdef{@\@current@prefix valid@#2@choice@options}{#4}%
        \csname@nyN\xdef{@#2@prefix}{\@current@prefix}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ProcessChoiceOption[2][\KVO@prefix]%
{%\ProcessChoiceOption[<prefix>]{<key>}
        \validatedfalse
        \csname@ynn\ifdefempty{#1#2}{}{\@nameuse{#1#2true}}%
        %\xp@ifdefempty{#1#2}{}{\@nameuse{#1#2true}}%
        \@nameuse{if\@nameuse{@\next @prefix}\next}%
                \ValidateChoiceCS%
                        {\csuse{#1#2}}%
                        {@#1valid@#2@choice@options}%
                        {}{\DeclareChoiceOptionError[#1]{#2}}%
        \fi%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ProcessChoiceOptions{\@for\next:=\@defined@Choice@Options\do{\ProcessChoiceOption[\@csname{@\next @prefix}]{\next}}}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~ Define 'my-latex' package "ChoiceArray" option declaration/processing commands ~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\def\DeclareChoiceArrayOption{\@ifnextchar({\@DeclareChoiceArrayOption}{\@DeclareChoiceArrayOption(\KVO@prefix)}}%
%-------------------------------------------------------------------------------------------------------------------------------%
\def\@DeclareChoiceArrayOption(#1)#2#3[#4]#5%
{%\DeclareChoiceArrayOption<*>(<prefix>){<key>}[<default>]{<valid key values>}
        \csname@nyN\xdef{\@current@prefix#3@default@choice}{#4}
        \csname@nyN\xdef{\@current@prefix valid@#3@choicearray@options}{#5}
        \csname@nyN\xdef{\@current@prefix#3@choice@colnum}{#2}
        \ifstrempty{#1}
                {\def\@current@prefix{\KVO@prefix}}%
                {\def\@current@prefix{#1}}%
        \ifstrempty{#4}
                {\DeclareStringOption{#3}}%
                {\DeclareStringOption[#4]{#3}[#4]}%
        \ValidateChoicePair{#2}{#4}{#5}%
        {%
                \csname@nyN\xdef{\@current@prefix#3@default@val}{\@validated@index@value}%
                \csname@nyN\xdef{\@current@prefix#3@choicearray@value}{\@validated@index@value}%
        }{}%
        \@add@to@csvlist{#3}{\@defined@ChoiceArray@Options}
        %\xp@newif{if\@current@prefix#3}%->\if<prefix><key>
        \csname@y\newif{if\@current@prefix#3}%->\if<prefix><key>
        \csname@nyN\xdef{@#3@prefix}{\@current@prefix}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ProcessChoiceArrayOption[2][\KVO@prefix]%
{%\ProcessChoiceArrayOption[<prefix>]{<key>}
        \validatedfalse%
        \csname@ynn\ifdefempty{#1#2}{}{\@nameuse{#1#2true}}%
        %\xp@ifdefempty{#1#2}%
        %        {}{\@nameuse{#1#2true}}%
        \@nameuse{if\@nameuse{@\next @prefix}\next}%
                \xdef\@valid@choicearray@options{\@nameuse{#1valid@#2@choicearray@options}}%
                \xdef\@current@choicearray@option{\csname mylatex@#2\endcsname}%
                \csletcs{@choicearray@colnum}{\@current@prefix#2@choice@colnum}
                \ValidateChoicePair%
                        {\@choicearray@colnum}%
                        {\@current@choicearray@option}%
                        {\@valid@choicearray@options}%
                        {\csname@nyN\xdef{\@current@prefix#2@choicearray@value}{\@validated@index@value}}%
                        {\DeclareChoiceArrayOptionError[#1]{#2}}%
        \fi%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ProcessChoiceArrayOptions%
{%
        \@for\next:=\@defined@ChoiceArray@Options%
        \do{\ProcessChoiceArrayOption[\csname @\next @prefix\endcsname]{\next}}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand{\ValidateChoiceCS}[4]%
{%
        \validatedfalse%
        \xdef\@valid@choices{\csuse{#2}}%
        \xdef\@test@choice{#1}%
        \foreach \@current@choice [count=\@count] in \@valid@choices%
        {%
                \ifdefequal{\@current@choice}{\@test@choice}%
                {%
                        \global\validatedtrue\breakforeach%
                        \csname@nyN\xdef{@validated@index}{\@count}%
                }{}%
        }%
        \ifvalidated#3\else#4\fi%
}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~ Define 'my-latex' package "Choice/ChoicePair" option input validation commands ~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ValidateChoiceDef[4]%
{%\ValidateChoiceDef{user's choice}{valid choices list}{cmd if valid}{cmd if invalid "Choice" error handler}
        \validatedfalse%
        \xdef\@test@cs{#1}
        \foreach \@current@choice [count=\@count] in #2%
        {%
                \ifdefequal{\@current@choice}{\@test@cs}%
                {%
                        \global\validatedtrue\breakforeach%
                        \csname@nyN\xdef{@validated@index}{\@count}%
                }{}%
        }%
        \ifvalidated#3\else#4\fi%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand{\ValidateChoicePair}[5]%
{%\ValidateChoicePair{choice column #}{user's choice}{valid choices list}{cmd if valid}{cmd if invalid "ChoiceArray" error handler}
        \validatedfalse%
        \xdef\@test@cs{#2}
        \foreach \@current@choice/\@current@choice@val [count=\@count] in #3%
        {%
                \ifnumequal{#1}{1}%
                {%
                        \ifdefequal{\@current@choice}{\@test@cs}%
                        {%
                                \global\validatedtrue\breakforeach%
                                \csname@nyN\xdef{@validated@index}{\@count}%
                                \csname@nyN\xdef{@validated@index@choice}{\@current@choice}%
                                \csname@nyN\xdef{@validated@index@value}{\@current@choice@val}%
                        }{}%
                }{}%
                \ifnumequal{#1}{2}%
                {%
                        \ifdefequal{\@current@choice@val}{\@test@cs}%
                        {%
                                \global\validatedtrue\breakforeach%
                                \csname@nyN\xdef{@validated@index}{\@count}%
                                \csname@nyN\xdef{@validated@index@choice}{\@current@choice}%
                                \csname@nyN\xdef{@validated@index@value}{\@current@choice@val}%
                        }{}%
                }{}%
        }
        \ifvalidated#4\else#5\fi%
}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~ Define combined 'my-latex' + kvoptions package options processing command ~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ProcessPackageOptions[1][]%
{%\ProcessPackageOptions[family]
        \xdef\pkgopts@family{\KVO@family}
        \xdef\pkgopts@prefix{\KVO@prefix}
        \global\let\pkgopts@setkeys=\KVO@setkeys
        \ifstrempty{#1}%
                {\ProcessKeyvalOptions*}%
                {\ProcessKeyvalOptions{#1}}%
        \ProcessChoiceArrayOptions%
        \ProcessChoiceOptions%
}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~ Commands for printing the "my-latex" package options info & loaded package list  ~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\PrintBoolOptionPairInfo[2][]%
{%\PrintBoolOptionPairInfo[<prefix>]{<key>}
        %\ifstrempty{#1}
%                {\def\@boolpairkey@prefix{\@nameuse{@#2@prefix}}}
%                {\def\@boolpairkey@prefix{#1}}
        \indent \underline{Bool Option Pair key (family@key)} : mylatex@#2\\
        \value{\@nameuse{ifmylatex@#2}}%
        \value{\@nameuse{ifmylatex@#2off}}%
        \value{\@nameuse{ifmylatex@no#2}}%
         %       \indent\indent \underline{Provided} = true\\%
         %       \indent\indent \underline{Acceptable Choices} = %
          %      \indent\indent \underline{Selected Choice} = \@nameuse{\KVO@prefix#2}\\
        %\else%
        %        \indent\indent \underline{Provided} = false\\%
        %\fi%
}
%\DeclareComplementaryOption{#2off}{#2}
%        \DeclareComplementaryOption{no#2}{#2}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\PrintBoolOptionPairsInfo%
{%
        \noindent \underline{Defined Bool Pair Keys} : \@defined@Bool@Option@Pairs\\%
        \@for\next:=\@defined@Bool@Option@Pairs%
                \do{\PrintBoolOptionPairInfo{\next}}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\PrintChoiceInfo[2][]%
{%\ProcessChoiceOption[<prefix>]{<key>}
        \ifstrempty{#1}%
                {\def\@choicekey@prefix{\@nameuse{@#2@prefix}}}%
                {\def\@choicekey@prefix{#1}}%
        \item \@choicekey@prefix#2 (family@key)\\
        \indent\indent \underline{Acceptable Choices} = %
        \fullyexpand{\@nameuse{@\@choicekey@prefix valid@#2@choice@options}}\\%
        \@nameuse{if\@choicekey@prefix#2}%
                \indent\indent \underline{Provided} = true\\%
                \indent\indent \underline{Selected Choice} = \@nameuse{\@choicekey@prefix#2}
        \else%
                \indent\indent \underline{Provided} = false%
        \fi%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\PrintChoicesInfo%
{%
        \noindent \underline{Defined Choice Keys} : \@defined@Choice@Options%
        \begin{enumerate}%
        \@for\next:=\@defined@Choice@Options%
                \do{\PrintChoiceInfo[\@nameuse{@\next @prefix}]{\next}}%
        \end{enumerate}
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\printpkgopt[2][]%
{%\ProcessChoiceArrayOption[<prefix>]{<key>}
        \ifstrempty{#1}%
                {\edef\@choicekey@prefix{\@nameuse{@#2@prefix}}}%
                {\edef\@choicekey@prefix{#1}}%
        \ifcsundef{\@choicekey@prefix#2}{\@choicekey@prefix#2 : UNDEFINED\\}%
        {%
                \@nameuse{if\@choicekey@prefix#2}%
                        \@choicekey@prefix#2=\@nameuse{\@choicekey@prefix#2} (user defined)\\%
                \else%
                        \@choicekey@prefix#2=\@nameuse{\@choicekey@prefix#2} (default)\\%
                \fi%
        }%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\PrintPackageList{\noindent \underline{Loaded Packages} : \@loaded@packages}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Package loading commands extending '\RequirePackage' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\gdef\LocalPkgDir{.}
\gdef\LocalPkgPrefix{./}
\gdef\@pkg@dir{./}
\gdef\LocalPkgXtor#1{"./#1"}
\gdef\PkgDirXtor#1#2{"#1/#2"}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\ifpkgopt[4][\KVO@prefix]{\@nameuse{if#1#2}#3\else#4\fi}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\RequirePackageOnce[1]
{%
        \@ifpackageloaded{#1}{}%
        {%
                \RequirePackage{#1}%
                \@add@to@csvlist{#1}{\@loaded@packages}
        }%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\RequirePackageList[1]{\@for\next:=#1\do{\xp\RequirePackageOnce\xp{\next}}}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\RequirePkgOnce[2][]
{%
        \@ifpackageloaded{\@pkg@dir#2}{}%
        {%
                \RequirePackage[#1]{\@pkg@dir#2}
                \@add@to@csvlist{#2}{\@loaded@packages}
        }%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\RequirePkgList[1]{\@for\next:=#1\do{\xp\RequirePkg\next}}
%-------------------------------------------------------------------------------------------------------------------------------%
%-------------------------------------------------------------------------------------------------------------------------------%
%-------------------------------------------------------------------------------------------------------------------------------%
%-------------------------------------------------------------------------------------------------------------------------------%
%-------------------------------------------------------------------------------------------------------------------------------%
%-------------------------------------------------------------------------------------------------------------------------------%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\RequirePkgHelp[2][\KVO@prefix]%
{%\DeclareChoiceArrayOptionHelp[<prefix>]{<key>}
        \gdef\helptext{\string\DeclareChoiceArrayOption\space Help:%
        \IndentedMessageBreak Valid '#1#2' Options:%
        \MessageBreak\IndentedMessageBreak #2\space=\space{\@nameuse{#1valid@#2@choicearray@options}}}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\RequirePkgMessage[2][\KVO@prefix]%
{%\RequirePkgMessage[<prefix>]{<key>}
        \gdef\msgtext{\string\DeclareChoiceArrayOption\space Error%
        \MessageBreak Invalid choice '#1#2\space=\space\@nameuse{#1#2}'}%
        \ifdefempty{\@nameuse{#1pkgdir}}%
        {%
                %\ifmylatex@localpkg%
                \@nameuse{if#1localpkg}%
                        \xdef\@pkg@dir{\LocalPkgPrefix}%
                \else%
                        \xdef\@pkg@dir{}%
                \fi%
        }%
        {\xdef\@pkg@dir{\@nameuse{#1pkgdir}/}}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
%\newcommand\RequirePkg[2][]{\RequirePackage[#1]{\@pkg@dir#2}}
\newcommand\RequirePkg[2][]%
{%
        \IfFileExists{\@pkg@dir#2}%
               %{\RequirePackage[#1]{\@pkg@dir#2}}%
               %{\RequirePackage[#1]{#2}}%
               {\@PackageError\pkgname\RequirePkg@warning@msgtext\RequirePkg@warning@helptext\RequirePackage[#1]{\@pkg@dir#2}}%
               {\@PackageError\pkgname\RequirePkg@warning@msgtext\RequirePkg@warning@helptext\RequirePackage[#1]{#2}}%\@PackageWarning
        %\RequirePackage[#1]{#2}%
}
%-------------------------------------------------------------------------------------------------------------------------------%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Package option handler commands ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\SetPkgSource[1][\pkgopts@prefix]%
{%\SetPkgSource[<prefix>]%
        \ifcsempty{#1pkgdir}%
        {%
                \ifpkgopt[#1]{localpkg}%
                {% User input: 'localpkg'/'localpkg=true' & 'pkgdir='/'pkgdir={}'/equivalent or 'pkgdir' not provided
                        \gdef\RequirePkg@warning@input{'localpkg = true' }%
                        \gdef\RequirePkg@warning@inputdir{local directory}%
                        \xdef\@pkg@dir{\LocalPkgPrefix}%
                }%
                {% User input: 'libpkg'/'libpkg=true' & 'pkgdir='/'pkgdir={}'/equivalent or 'pkgdir' not provided
                        \gdef\RequirePkg@warning@input{'libpkg = true' }%
                        \gdef\RequirePkg@warning@inputdir{library home}%
                        \xdef\@pkg@dir{}%
                }%
                \xdef\RequirePkg@warning@msgtext{\RequirePkg@warning@input but package file not found in \RequirePkg@warning@inputdir. Now searching for the file in known package file directores}
                \xdef\RequirePkg@warning@helptext{Confirm file location and verify that the appropriate package options were used and were given valid input/values; use 'pkgdir={...}' option to provide the file path explicitly}
        }%
        {% User input 'pkgdir=x', where x = nonempty path/directory w/ format x, {x}, "x", or {"x"}
                \gdef\RequirePkg@warning@msgtext{Package file not found in 'pkgdir = \@nameuse{#1pkgdir}'}%
                \gdef\RequirePkg@warning@helptext{Confirm file location and verify its path matches what was given to 'pkgdir'}
                \xdef\@pkg@dir{\@nameuse{#1pkgdir}/}%
        }%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\SetDocumentClass[1][\pkgopts@prefix]%
{%\SetDocumentClass[<prefix>]
        \ifstrempty{\@nameuse{#1documentclass}}%
                {\def\thedocumentclass{report}}%
                {\def\thedocumentclass{\@nameuse{#1documentclass}}}%
        \ifmylatex@article
                \def\thedocumentclass{article}
        \fi
        \ifmylatex@report
                \def\thedocumentclass{report}
        \fi
        %\PassOptionsToClass{landscape}{article}
        %\PassOptionsToClass{landscape}{report}
        \ifmylatex@standalone
                \documentclass[\the@doc@sizeX,class=\thedocumentclass, crop=false]{standalone}
        \else
                \documentclass{\the@doc@sizeX,\thedocumentclass}%
        \fi
}
%-------------------------------------------------------------------------------------------------------------------------------%
%\xp@newif{if\@current@prefix#2}%->\if<prefix><key>
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\SetFBMsettings%
{%
        \ifmylatex@FBM@dotfill
                \newcommand*{\frontbackmatterhfill}{\fbm@dotfill}%
        \else
                \newcommand*{\frontbackmatterhfill}{\fbm@nofill}%
        \fi
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\SetDefaultFont%
{%
        \stripunits{\@doc@fontsize}[\@doc@fontsize@unitless]%\pgfmathresult
        \toint{\@doc@fontsize@unitless}[\@doc@fontsize@unitless@int]%
        \renewcommand{\rm}{\@doc@default@font}%
        \def\@doc@default@font
        {%
                \fontencoding{\@doc@fontencoding}%
                \fontfamily{\@doc@fontfamily}%
                \fontseries{\@doc@fontseries}%
                \fontshape{\@doc@fontshape}%
                \fontsize{\@doc@fontsize}{\baselineskip}%
                \renewcommand{\familydefault}{\@doc@fontfamily}
                \selectfont%
        }
        \fontcolor{current-coltext}%
        \dimgdef\f@halfsize{\@doc@fontsize / 2}%
        %\dimgdef\f@halfsize{0.5\@doc@fontsize}%
        %\setlength\f@halfheight{\f@halfsize}
        %\@doc@default@font%
}
%-------------------------------------------------------------------------------------------------------------------------------%
\newcommand\SetDocFontSettings[1][\pkgopts@prefix]%
{%
        \xdef\@doc@fontencoding{\mylatex@fontencoding}
        \xdef\@doc@fontname{\mylatex@fontname}
        \ifdefempty{\mylatex@fontfamily}
                {\xdef\@doc@fontfamily{\mylatex@fontname@choicearray@value}}
                {\xdef\@doc@fontfamily{\mylatex@fontfamily}}
        \xdef\@doc@fontseries{\mylatex@fontseries}
        \xdef\@doc@fontshape{\mylatex@fontshape}
        %\xdef\@doc@fontsize{\mylatex@fontsize}
        \xdef\@doc@sizeX{\mylatex@sizeXclo}
        %font
        %
        \xdef\the@doc@sizeX{\@doc@sizeX pt}
        \xdef\@rmfont@fd@file{cmr\@doc@sizeX}%{qx-anttr}%{cmu10}
        \ifmylatex@sizeXclo
                \xdef\@doc@fontsize{\@doc@sizeX pt}
        \else
                \xdef\@doc@fontsize{\mylatex@fontsize}
        \fi
        \def\doctextsize{\dimexpr\f@size pt\relax}
}
%-------------------------------------------------------------------------------------------------------------------------------%
%*******************************************************************************************************************************%
%*********************************************** End of 'pkgopts.sty' package **************************************************%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
\makeatother
%-------------------------------------------------------------------------------------------------------------------------------%
\endinput
%-------------------------------------------------------------------------------------------------------------------------------%
%*******************************************************************************************************************************%
%*********************************************************** NOTES *************************************************************%
%*******************************************************************************************************************************%
%-------------------------------------------------------------------------------------------------------------------------------%
