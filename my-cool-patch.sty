%******************************************************************************************************************************%
%**************************************************** `my-cool-patch.sty' *****************************************************%
%******************************************************************************************************************************%
% This is an adaptation of the 'cool' package, which provides a wide range of mathematical macros/operators/symbols/etc. which are intuitively named and easy to use and have been standardized such that the mathematical meaning is retained, greatly simplifying the conversion of LaTeX documents into other executable formats such as Content MathML or Mathematica code.  This patch simply modifies some of the implementations affecting appearance such that it conforms with that of the 'my-math' subpackage of the 'my-latex' package.  For example, macros/commands providing mathematical operators/symbols/expressions possessing exponents, such as (partial) derivatives, the exponential function (i.e. inverse of natural logarithm), multidimensional sets, etc., have primarily been implemented such that the exponent is typeset in a smaller font style by applpying \scriptstyle or \scriptscriptstyle.
%
% Therefore, macros/commands provided by the 'cool' package, such as the normal/partial derivative operators \D and \pderiv, respectively, are being renewed/redefined with the \scriptstyle or \scriptscriptstyle font style commands added and applied to the exponential terms/arguments such that the mathematical expressions typeset using macros/commands from the 'my-math' subpackage and this patch will match in terms of size/appearance.  The aspects and macros/commands/configurations of the 'cool' package targeted for modification in this patch will likely expand as usage of this newly discovered package increases
%******************************************************************************************************************************%
%********************************** Define provided package name and LaTeX/package dependencies *******************************%
%******************************************************************************************************************************%
\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{my-cool-patch}                 % This is a patch to the `cool` package, renewing/redefining some macros
%\RequirePackage{cool}                           % COntent Oriented LaTeX (LATEX2î) : standardized mathematical macros/operators/symbols/etc.
%******************************************************************************************************************************%
%************************************* Package options and corresponding Boolean variables ************************************%
%******************************************************************************************************************************%
%------------------------------------------------------------------------------------------------------------------------------%
\DeclareOption*{\PackageWarning{my-cool-patch}{Unknown \CurrentOption}}
%******************************************************************************************************************************%
%************************************************ Processing of package options ***********************************************%
%******************************************************************************************************************************%
%------------------------------------------------------------------------------------------------------------------------------%
\ProcessOptions\relax
%------------------------------------------------------------------------------------------------------------------------------%
\makeatletter                             % Change @ to standard letter, \catcode'@=11 so it can be used in macro names/definition
%******************************************************************************************************************************%
%******************************************************** Package Body ********************************************************%
%******************************************************************************************************************************%
%------------------------------------------------------------------------------------------------------------------------------%
\renewcommand{\COOL@derivative}[4]{%
\listval{#3}{0}%
\setcounter{COOL@listlen}{\value{COOL@listpointer}}%
\liststore{#3}{COOL@deriv@wrt@}%
\listval{#1}{0}%
\setcounter{COOL@ct}{\value{COOL@listpointer}}%
\ifthenelse{\value{COOL@ct}>\value{COOL@listlen}}%
{\setcounter{COOL@ct}{\value{COOL@listlen}}}{}%
\liststore{#1}{COOL@deriv@powers@}%
\isint{\COOL@deriv@powers@i}{COOL@isint}%
\setcounter{COOL@multideriv}{2}%
\whiledo{ \boolean{COOL@isint} \AND
\NOT \value{COOL@multideriv}>\value{COOL@ct}  }%
{%
\def\COOL@tempd%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\isint{\COOL@tempd}{COOL@isint}%
\stepcounter{COOL@multideriv}%
}%
\ifthenelse{ \equal{\COOL@notation@DShorten}{true} \AND
\equal{\COOL@notation@DDisplayFunc}{inset} }%
{%
\ifthenelse{ \boolean{COOL@isint} }%
{%
\def\COOL@temp@D@bot{}%
\setcounter{COOL@ct@}{0}%
\forLoop{1}{\value{COOL@ct}}{COOL@multideriv}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\addtocounter{COOL@ct@}{\COOL@power@temp}%
\ifthenelse{ \value{COOL@multideriv}=1 }{}%
{\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
\ifthenelse{\value{COOL@ct}<\value{COOL@listlen}}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\stepcounter{COOL@ct}%
\forLoop{\value{COOL@ct}}{\value{COOL@listlen}}{COOL@multideriv}%
{%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\addtocounter{COOL@ct@}{\COOL@power@temp}%
\ifthenelse{ \value{COOL@multideriv}=1 }{}%
{\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
}%
{}%
\ifthenelse{\value{COOL@ct@}=1}%
{%
\frac{{#4} #2}{\COOL@temp@D@bot}%
}%
{%
\frac{{#4}^{\scriptscriptstyle\arabic{COOL@ct@}} #2}{\COOL@temp@D@bot}%
}%
}%
{%
\edef\COOL@temp@D@bot{}%
\def\COOL@temp@D@top@power{}%
\forLoop{1}{\value{COOL@ct}}{COOL@multideriv}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \value{COOL@multideriv} = 1}%
{%
\edef\COOL@temp@D@top@power{\COOL@power@temp}%
}%
{%
\edef\COOL@temp@D@top@power%
{\COOL@temp@D@top@power + \COOL@power@temp}%
\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}%
}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
\ifthenelse{\value{COOL@ct}<\value{COOL@listlen}}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\stepcounter{COOL@ct}%
\forLoop{\value{COOL@ct}}{\value{COOL@listlen}}{COOL@multideriv}%
{%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \value{COOL@multideriv} = 1}%
{%
\edef\COOL@temp@D@top@power{\COOL@power@temp}%
}%
{%
\edef\COOL@temp@D@top@power%
{\COOL@temp@D@top@power + \COOL@power@temp}%
\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}%
}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
}%
{}%
\frac{{#4}^{\scriptscriptstyle\COOL@temp@D@top@power} #2}{\COOL@temp@D@bot}%
}%
}%
{ \ifthenelse{ \equal{\COOL@notation@DShorten}{true} \AND
\equal{\COOL@notation@DDisplayFunc}{outset}  }%
{%
\ifthenelse{ \boolean{COOL@isint} }%
{%
\def\COOL@temp@D@bot{}%
\setcounter{COOL@ct@}{0}%
\forLoop{1}{\value{COOL@ct}}{COOL@multideriv}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\addtocounter{COOL@ct@}{\COOL@power@temp}%
\ifthenelse{ \value{COOL@multideriv}=1 }{}%
{\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
\ifthenelse{\value{COOL@ct}<\value{COOL@listlen}}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\stepcounter{COOL@ct}%
\forLoop{\value{COOL@ct}}{\value{COOL@listlen}}{COOL@multideriv}%
{%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\addtocounter{COOL@ct@}{\COOL@power@temp}%
\ifthenelse{ \value{COOL@multideriv}=1 }{}%
{\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
}%
{}%
\ifthenelse{\value{COOL@ct@}=1}%
{%
\frac{#4}{\COOL@temp@D@bot} #2%
}%
{%
\frac{{#4}^{\arabic{COOL@ct@}}}{\COOL@temp@D@bot} #2%
}%
}%
{%
\edef\COOL@temp@D@bot{}%
\def\COOL@temp@D@top@power{}%
\forLoop{1}{\value{COOL@ct}}{COOL@multideriv}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \value{COOL@multideriv} = 1}%
{%
\edef\COOL@temp@D@top@power{\COOL@power@temp}%
}%
{%
\edef\COOL@temp@D@top@power%
{\COOL@temp@D@top@power + \COOL@power@temp}%
\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}%
}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
\ifthenelse{\value{COOL@ct}<\value{COOL@listlen}}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\stepcounter{COOL@ct}%
\forLoop{\value{COOL@ct}}{\value{COOL@listlen}}{COOL@multideriv}%
{%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \value{COOL@multideriv} = 1}%
{%
\edef\COOL@temp@D@top@power{\COOL@power@temp}%
}%
{%
\edef\COOL@temp@D@top@power%
{\COOL@temp@D@top@power + \COOL@power@temp}%
\edef\COOL@temp@D@bot{\COOL@temp@D@bot \,}%
}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@bot%
{\COOL@temp@D@bot {#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
}%
}%
{}%
\frac{{#4}^{\scriptscriptstyle\COOL@temp@D@top@power} }{\COOL@temp@D@bot} #2%
}%
}%
{ \ifthenelse{ \equal{\COOL@notation@DShorten}{false} \AND
\equal{\COOL@notation@DDisplayFunc}{inset} }%
{%
\def\COOL@temp@D@result{}%
\def\COOL@temp@D@bot{}%
\def\COOL@temp@D@top{}%
\setcounter{COOL@ct@}{\value{COOL@ct}}%
\addtocounter{COOL@ct@}{-1}
\forLoop{1}{\value{COOL@ct@}}{COOL@multideriv}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top}{\COOL@temp@D@bot}}%
}%
\ifthenelse{\value{COOL@ct}<\value{COOL@listlen}}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@ct}\endcsname}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top}{\COOL@temp@D@bot}}%
\stepcounter{COOL@ct}%
\setcounter{COOL@ct@}{\value{COOL@listlen}}%
\addtocounter{COOL@ct@}{-1}%
\forLoop{\value{COOL@ct}}{\value{COOL@ct@}}{COOL@multideriv}%
{%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top}{\COOL@temp@D@bot}}%
}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@listlen}\endcsname}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top #2}{\COOL@temp@D@bot}}%
}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@ct}\endcsname}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top #2}{\COOL@temp@D@bot}}%
}%
\COOL@temp@D@result%
}%
{ \ifthenelse{ \equal{\COOL@notation@DShorten}{false} \AND
\equal{\COOL@notation@DDisplayFunc}{outset} }%
{%
\def\COOL@temp@D@result{}%
\def\COOL@temp@D@bot{}%
\def\COOL@temp@D@top{}%
\forLoop{1}{\value{COOL@ct}}{COOL@multideriv}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@multideriv}\endcsname}%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top}{\COOL@temp@D@bot}}%
}%
\ifthenelse{\value{COOL@ct}<\value{COOL@listlen}}%
{%
\edef\COOL@power@temp%
{\csname COOL@deriv@powers@\roman{COOL@ct}\endcsname}%
\stepcounter{COOL@ct}%
\forLoop{\value{COOL@ct}}{\value{COOL@listlen}}{COOL@multideriv}%
{%
\edef\COOL@wrt@temp%
{\csname COOL@deriv@wrt@\roman{COOL@multideriv}\endcsname}%
\ifthenelse{ \equal{\COOL@power@temp}{1} }%
{%
\edef\COOL@temp@D@top{#4}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp}%
}%
{%
\edef\COOL@temp@D@top{{#4}^{\scriptscriptstyle\COOL@power@temp}}%
\edef\COOL@temp@D@bot{{#4} \COOL@wrt@temp^{\scriptscriptstyle\COOL@power@temp}}%
}%
\edef\COOL@temp@D@result%
{\COOL@temp@D@result \frac{\COOL@temp@D@top}{\COOL@temp@D@bot}}%
}%
}%
{%
}%
\COOL@temp@D@result #2
}%
{%
\PackageError{cool}{Invalid Option Sent}%
{DShorten can only be `true' or `false';%
 DDisplayFunc can only be `inset' or `outset'}%
}%
}}}%
}
%------------------------------------------------------------------------------------------------------------------------------%
%******************************************************************************************************************************%
%********************************************** End of 'my-cool-patch.sty' package ********************************************%
%******************************************************************************************************************************%
% Change @ character back to \catcode'@=12, i.e. a non letter character, so it can be used in macro names/definitions
\makeatother
%------------------------------------------------------------------------------------------------------------------------------%
\endinput 